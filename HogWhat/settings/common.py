"""
Django settings for HogWhat project.

Generated by 'django-admin startproject' using Django 1.11.20.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from os.path import join, abspath, dirname
import datetime
from django.urls import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = dirname(dirname(dirname(abspath(__file__))))

LOGS_DIR = os.path.join(BASE_DIR, 'logs')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4-#%5&8j+rtl2h641jwzyhe+-*+6q^6=+f&_ax^z$%)#(^est$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'rest_framework',
    'rest_framework.authtoken',
    
    'corsheaders',
    'accounts',
    'diagnosis',
    'info',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'HogWhat.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'AnimalDiseases',
        'USER' : 'root',
        'PASSWORD' : 'zaq1xsw@',
        'HOST' : '222.239.250.48',
        'PORT' : '3306',
        'OPTIONS' : {
            'read_default_file' : './db.cnf',
            'init_command' : "SET sql_mode='STRICT_TRANS_TABLES'",
            },
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = join(BASE_DIR, 'media')

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES' : (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    # 'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
    'DEFAULT_AUTHENTICATION_CLASSES' : [
        'rest_framework.authentication.TokenAuthentication',
        # 'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ],
    # 'DEFAULT_THROTTLE_CLASSES' : (

    # ),
    # 'DEFAULT_THROTTLE_RATES' : {
    #     'user' : None,
    #     'anon' : None,
    # },
}

# JWT_AUTH = {
#     'JWT_ALLOW_REFRESH' : True,
#     'JWT_EXPIRATION_DELTA' : datetime.timedelta(seconds=600),
#     'JWT_REFRESH_EXPIRATION_DELTA' : datetime.timedelta(days=7),
    # 'JWT_ALLOW_REFRESH' = False,
# }

REST_USE_JWT = True

AUTH_USER_MODEL = 'accounts.User'

LOGIN_URL = reverse_lazy('login')
LOGIN_REDIRECT_URL = '/accounts/profile/'
LOGOUT_REDIRECT_URL = None

LOGGING = {
    'version' : 1,
    'disable_existing_loggers' : False,
    'filters' : {
        'require_debug_true' : {
            '()' : 'django.utils.log.RequireDebugTrue',
            }, 
        },
        'handlers' : {
            'console' : {
                'level' : 'DEBUG',
                'filters' : ['require_debug_true'], 
                'class' : 'logging.StreamHandler',
            },
            'write_to_file' : {
                'level' : 'DEBUG',
                'filters' : ['require_debug_true'],
                'class' : 'logging.FileHandler',
                'filename' : 'db.log',
            }, 
        },
        'loggers' : {
            'django.db.backends' : {
                'handlers' : ['write_to_file'],
                'level' : 'DEBUG',
                },
            'serve' : {
                'handlers':['write_to_file'],
                'level' : 'DEBUG',
            }
            }
        }


CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = False

# CORS_ORIGIN_WHITELIST = [
#     '127.0.0.1:8000',
#     'localhost:8000',
# ]

# SITE_ID = 1 # 추후 서비스하는 도메인으로 변경

